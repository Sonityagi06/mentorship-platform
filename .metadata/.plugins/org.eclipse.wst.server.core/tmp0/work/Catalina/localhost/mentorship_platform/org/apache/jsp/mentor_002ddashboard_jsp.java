/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.34
 * Generated at: 2025-05-11 19:17:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.hrit.mentorship_platform.model.User;

public final class mentor_002ddashboard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(2);
    _jspx_imports_classes.add("com.hrit.mentorship_platform.model.User");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');

   
    if (session == null || session.getAttribute("user") == null) {
        response.sendRedirect("login.jsp"); // Redirect to login page if not logged in
        return;
    }
    User user = (User) session.getAttribute("user"); // Get the user object from session

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>Mentor Dashboard</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"css/mentor-dashboard.css\">\r\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap\" rel=\"stylesheet\">\r\n");
      out.write("    <link rel=\"icon\" href=\"https://img.icons8.com/ios-filled/50/000000/mentor.png\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("    <div class=\"dashboard-container\">\r\n");
      out.write("         \r\n");
      out.write("        <div class=\"sidebar\">\r\n");
      out.write("            <div class=\"sidebar-header\">\r\n");
      out.write("                <img src=\"images/mentorr.jpeg\" alt=\"Profile\" class=\"profile-img\">\r\n");
      out.write("                <h3>");
      out.print( user.getName() );
      out.write("</h3>\r\n");
      out.write("                <p>");
      out.print( user.getRole().substring(0,1).toUpperCase() + user.getRole().substring(1) );
      out.write("</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            <ul class=\"menu\">\r\n");
      out.write("                <li><a href=\"mentor-dashboard.jsp\">Dashboard</a></li>\r\n");
      out.write("                <li><a href=\"mentor-appointments.jsp\">Appointments</a></li>\r\n");
      out.write("                <li><a href=\"mentor-messages.jsp\">Messages</a></li>\r\n");
      out.write("                <li><a href=\"edit-mentor-profile.jsp\">Profile</a></li>\r\n");
      out.write("                \r\n");
      out.write("                <li><a href=\"");
      out.print( request.getContextPath() + "/logout" );
      out.write("\">Logout</a></li>\r\n");
      out.write("                <li><a href=\"index.jsp\">Back-To-Home</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <!-- Main Content -->\r\n");
      out.write("        <div class=\"main-content\">\r\n");
      out.write("            <div class=\"welcome-section\">\r\n");
      out.write("                <h2>Welcome, ");
      out.print( user.getName() );
      out.write("!</h2>\r\n");
      out.write("                <p>Here's a quick overview of your mentoring activities.</p>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            <div class=\"cards-container\">\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <img src=\"https://img.icons8.com/ios-filled/50/000000/calendar.png\" alt=\"Appointments\" class=\"card-icon\">\r\n");
      out.write("                    <h3>Your Appointments</h3>\r\n");
      out.write("                    <p>View and manage your upcoming appointments with mentees.</p>\r\n");
      out.write("                    <a href=\"mentor-appointments.jsp\" class=\"btn\">Manage Appointments</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <img src=\"https://img.icons8.com/ios-filled/50/000000/comments.png\" alt=\"Messages\" class=\"card-icon\">\r\n");
      out.write("                    <h3>Your Messages</h3>\r\n");
      out.write("                    <p>Communicate with your mentees and stay updated.</p>\r\n");
      out.write("                    <a href=\"mentor-messages.jsp\" class=\"btn\">View Messages</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card\">\r\n");
      out.write("                    <img src=\"https://img.icons8.com/ios-filled/50/000000/user.png\" alt=\"Profile\" class=\"card-icon\">\r\n");
      out.write("                    <h3>Your Profile</h3>\r\n");
      out.write("                    <p>Update your profile details and mentoring information.</p>\r\n");
      out.write("                  <a href=\"edit-mentor-profile.jsp\" class=\"btn\">Edit Profile</a>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            \r\n");
      out.write("            \r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
