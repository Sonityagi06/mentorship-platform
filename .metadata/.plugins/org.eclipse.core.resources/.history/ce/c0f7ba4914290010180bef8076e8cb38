package com.hrit.mentorship_platform.servlet;

import java.io.IOException;

import com.hrit.mentorship_platform.dao.MentorDao;
import com.hrit.mentorship_platform.model.Mentor;

import jakarta.servlet.ServletException;
import jakarta.servlet.annotation.WebServlet;
import jakarta.servlet.http.HttpServlet;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;


@WebServlet("/add-mentor")
public class AddMentorServlet extends HttpServlet {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	@Override
    protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		try {
	        String name = request.getParameter("name");
	        String expertise = request.getParameter("expertise");
	        String bio = request.getParameter("bio");
	        String contactNo = request.getParameter("contactNo");
	        int experienceYears = Integer.parseInt(request.getParameter("experienceYears"));

	        // Validate user_id
	        String userIdStr = request.getParameter("user_id");
	        if (userIdStr == null || userIdStr.trim().isEmpty()) {
	            throw new NumberFormatException("user_id is missing or empty");
	        }
	        int userId = Integer.parseInt(userIdStr);

	        Mentor mentor = new Mentor();
	        mentor.setName(name);
	        mentor.setExpertise(expertise);
	        mentor.setBio(bio);
	        mentor.setContact_no(contactNo);
	        mentor.setExperienceYears(experienceYears);
	        mentor.setUserId(userId);

	        MentorDao mentorDao = new MentorDao();
	        boolean isAdded = mentorDao.addMentor(mentor);

	        if (isAdded) {
	            response.sendRedirect("mentor-dashboard.jsp");
	        } else {
	            response.sendRedirect("add-mentor.jsp");
	        }

	    } catch (NumberFormatException e) {
	        request.setAttribute("errorMessage", "Invalid number format. Please check your input.");
	        request.getRequestDispatcher("add-mentor.jsp").forward(request, response);
	    }
    }

}
